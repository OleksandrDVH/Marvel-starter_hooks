{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","responce","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","className","children","_jsxs","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment"],"mappings":"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","file":"static/js/4.8216fcd6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}} src={img} alt='error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=0dfbdada31096f9121221db3cd3d7d06';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n    const getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const responce = await fetch(url, {method, body, headers});\r\n\r\n            if (!responce.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${responce.status}`)\r\n            }\r\n\r\n            const data = await responce.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setnewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setnewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                disabled={newItemLoading} \r\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}