{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","responce","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","_jsxs","className","children","substring","cutDescription","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharlist","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","this","setState","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.ad4059a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}} src={img} alt='error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=0dfbdada31096f9121221db3cd3d7d06';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n    const getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const responce = await fetch(url, {method, body, headers});\r\n\r\n            if (!responce.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${responce.status}`)\r\n            }\r\n\r\n            const data = await responce.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\nconst [char, setChar] = useState({});\r\n\r\nconst {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\nuseEffect(() => {\r\n    updateChar();\r\n    const timerId = setInterval(updateChar, 60000);\r\n\r\n    return () => clearInterval(timerId)\r\n}, [])\r\n\r\n\r\nconst onCharLoaded = (char) => {\r\n    setChar(char);\r\n}\r\n\r\nconst updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id)\r\n        .then(onCharLoaded)\r\n}\r\n\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? <View char={char}/> : null;\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage,wiki} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n}\r\n\r\nconst cutDescription = (description) => {\r\n    if (description.length > 150) {\r\n        return `${description.substring(0, 150)}...`;\r\n    }\r\n    return description\r\n}\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                {description ?\r\n                    <p className=\"randomchar__descr\">{cutDescription(description)}</p> :\r\n                    <p>Ooops... Description is not found!!!</p>\r\n                }\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharlist] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n    \r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharlist(charList => [...charList, ...newCharList]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended);\r\n    }\r\n\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <li \r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}\r\n\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        \r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n    \r\n        \r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n            className=\"button button__main button__long\"\r\n            disabled={newItemLoading}\r\n            style={{display: charEnded ? 'none' : 'block'}}\r\n            onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes ={\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    \r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [props.charId])\r\n\r\n\r\n    const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n    \r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n    \r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n}\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <div className=\"char__descr\">\r\n                    {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                    {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                    {comics.map((item, i) => {\r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return;\r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                           </li>\r\n                        )\r\n                    })\r\n                    }  \r\n                </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;"," import { Component } from \"react/cjs/react.production.min\";\r\n import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n class ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n }\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n        const [selectedChar, setChar] = useState(null);\r\n    \r\n        const onCharSelected = (id) => {\r\n            setChar(id);\r\n        }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MainPage;"],"sourceRoot":""}